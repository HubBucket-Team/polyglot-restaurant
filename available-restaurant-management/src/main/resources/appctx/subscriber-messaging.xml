<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:amqp="http://www.springframework.org/schema/integration/amqp"
	xmlns:rest="http://www.springframework.org/schema/integration/http"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xmlns:redis="http://www.springframework.org/schema/data/redis"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:cloud="http://schema.cloudfoundry.org/spring"
	xsi:schemaLocation="http://schema.cloudfoundry.org/spring http://schema.cloudfoundry.org/spring/cloudfoundry-spring-0.8.xsd
		http://www.springframework.org/schema/integration/amqp http://www.springframework.org/schema/integration/amqp/spring-integration-amqp.xsd
		http://www.springframework.org/schema/integration/http http://www.springframework.org/schema/integration/http/spring-integration-http.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd
		http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd
		http://www.springframework.org/schema/data/redis http://www.springframework.org/schema/data/redis/spring-redis-1.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<int:channel id="eventChannel"/>


	<int:object-to-json-transformer input-channel="eventChannel" output-channel="amqpOut"/>

	<int:channel id="amqpOut"/>

	<amqp:outbound-channel-adapter 
		channel="amqpOut" 
		amqp-template="rabbitTemplate" 
		routing-key="crudEvents"
		exchange-name="crudEvents"
		/>
		
	<!--  -->

	<amqp:inbound-channel-adapter 
		channel="inboundJsonEventsChannel"
		connection-factory="rabbitConnectionFactory" 
		queue-names="crudEvents"/>

	<int:channel id="inboundJsonEventsChannel"/>
	
	<int:json-to-object-transformer 
		input-channel="inboundJsonEventsChannel" 
		type="net.chrisrichardson.crudevents.events.JsonEntityCrudEvent"
		output-channel="inboundEventsChannel"/>
	
	<int:channel id="inboundEventsChannel"/>
	
	<int:service-activator 
		input-channel="inboundEventsChannel"
		ref="availableRestaurantManagementServiceImpl" 
		method="processEvent"/>

	<!--  -->
	<rabbit:direct-exchange name="crudEvents" durable="true">
		<rabbit:bindings>
			<rabbit:binding queue="crudEvents" key="crudEvents"/>
		</rabbit:bindings>
	</rabbit:direct-exchange>

	<rabbit:queue name="crudEvents" durable="true"/>

	<rabbit:admin connection-factory="rabbitConnectionFactory"/>

	<rabbit:template id="rabbitTemplate" connection-factory="rabbitConnectionFactory"/>

	<beans profile="default">
		<rabbit:connection-factory id="rabbitConnectionFactory" host="localhost"/>
	</beans>

	<beans profile="cloud">
		<cloud:rabbit-connection-factory id="rabbitConnectionFactory"/>
	</beans>

</beans>
